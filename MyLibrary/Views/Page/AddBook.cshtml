@model List<Book>

@{
    ViewBag.Title = "My Library";
}

<style>
    body {
        font-family: 'Segoe UI', sans-serif;
        margin: 0;
        padding: 0;
        background: #f8f4ec;
        color: #3c2f2f;
    }

    .container {
        display: flex;
        min-height: 100vh;
    }

    /* Sidebar */
    .sidebar-container {
        width: 200px;
        display: flex;
        flex-direction: column;
        position: relative;
        background: linear-gradient(180deg, #e9dcc5 0%, #d9c7a6 100%);
        box-shadow: 2px 0 10px rgba(0,0,0,0.1);
    }

    .sidebar-buttons {
        padding: 25px;
        display: flex;
        flex-direction: column;
        gap: 20px;
    }

        .sidebar-buttons h3 {
            color: #3c2f2f;
            text-align: center;
            border-bottom: 2px solid rgba(0,0,0,0.2);
            padding-bottom: 10px;
        }

        .sidebar-buttons button {
            padding: 10px;
            border: none;
            background: rgba(255,255,255,0.6);
            border-radius: 6px;
            cursor: pointer;
            transition: .3s;
            font-weight: 500;
        }

            .sidebar-buttons button:hover {
                background: #3c2f2f;
                color: #fff;
            }

    /* Content */
    .content {
        flex: 1;
        padding: 40px;
        overflow-y: auto;
    }

    h2 {
        margin-top: 0;
    }

    #addBookBtn {
        background: #3c2f2f;
        color: #fff;
        border: none;
        padding: 10px 20px;
        border-radius: 6px;
        cursor: pointer;
        transition: .3s;
    }

        #addBookBtn:hover {
            background: #5a433f;
        }

    /* Book cards */
    .book-list {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));
        gap: 20px;
        margin-top: 25px;
        padding: 0;
        list-style: none;
    }

        .book-list li {
            background: #fff;
            border-radius: 12px;
            padding: 15px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            transition: transform 0.2s ease, box-shadow 0.2s ease;
            display: flex;
            flex-direction: column;
            align-items: center;
            text-align: center;
        }

            .book-list li:hover {
                transform: translateY(-5px);
                box-shadow: 0 5px 15px rgba(0,0,0,0.15);
            }

        .book-list img {
            width: 100%;
            height: 200px;
            object-fit: cover;
            border-radius: 8px;
            margin-bottom: 10px;
        }

    .book-item button {
        background: #b33a3a;
        color: #fff;
        border: none;
        padding: 6px 12px;
        border-radius: 5px;
        margin-top: 5px;
        cursor: pointer;
        transition: .3s;
    }

        .book-item button:hover {
            background: #8b2828;
        }

    /* Modal */
    #bookModal {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0,0,0,0.6);
        justify-content: center;
        align-items: center;
        z-index: 1000;
    }

        #bookModal .modal-content {
            background: #fffaf2;
            padding: 30px;
            border-radius: 12px;
            width: 420px;
            max-width: 90%;
            box-shadow: 0 0 20px rgba(0,0,0,0.3);
            display: flex;
            flex-direction: column;
            gap: 15px;
        }

        #bookModal input, #bookModal textarea {
            width: 100%;
            padding: 10px;
            border-radius: 6px;
            border: 1px solid #c9b9a4;
            font-size: 14px;
        }

        #bookModal button {
            padding: 10px 15px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 500;
        }

            #bookModal button[type="submit"] {
                background: #3c2f2f;
                color: #fff;
            }

            #bookModal button#closeModal {
                background: #ccc;
            }

    #preview {
        width: 100%;
        max-height: 200px;
        object-fit: cover;
        border-radius: 8px;
        display: none;
    }

</style>

<div class="container">
    <div class="sidebar-container">
        <div class="sidebar-buttons">
            <h3>@ViewBag.UserName</h3>
            <button onclick="location.href='@Url.Action("Libraries", "Library")'">📚 All Libraries</button>
            <button onclick="location.href='@Url.Action("Login", "Account")'">🚪 Logout</button>
        </div>
    </div>

    <div class="content">
        <h2>📖 My Books</h2>
        <hr>
        <button id="addBookBtn">+ Add Book</button>

        <ul class="book-list">
            @foreach (var book in Model)
            {
                <li>
                    @if (!string.IsNullOrEmpty(book.ImagePath))
                    {
                        <img src="@book.ImagePath" alt="@book.Title" />
                    }
                    else
                    {
                        <img src="https://via.placeholder.com/200x250?text=No+Image" alt="No image" />
                    }
                    <strong>@book.Title</strong><br>
                    <small><em>Notes:</em> @book.Notes</small><br>
                    <small><em>Thoughts:</em> @book.Thoughts</small>

                    <div class="book-item">
                        <form asp-action="RemoveBook" method="post" style="display:inline;">
                            <input type="hidden" name="id" value="@book.Id" />
                            <button type="submit">Sil</button>
                        </form>
                    </div>
                </li>
            }
        </ul>
    </div>
</div>

<!-- Modal -->
<div id="bookModal">
    <div class="modal-content">
        <h2>➕ Add New Book</h2>
        <form asp-action="AddBook" asp-controller="Page" method="post" enctype="multipart/form-data">
            <input type="text" name="Title" placeholder="Book Title" required />
            <textarea name="Notes" placeholder="Notes about the book"></textarea>
            <textarea name="Thoughts" placeholder="Your thoughts"></textarea>

            <label for="ImageFile">Book Cover</label>
            <input type="file" name="ImageFile" id="ImageFile" accept="image/*" />
            <img id="preview" src="" />

            <button type="submit">Add Book</button>
            <button type="button" id="closeModal">Cancel</button>
        </form>
    </div>
</div>


<script>
    document.addEventListener('DOMContentLoaded', () => {
        const modal = document.getElementById('bookModal');
        const btnOpen = document.getElementById('addBookBtn');
        const btnClose = document.getElementById('closeModal');
        const fileInput = document.getElementById('ImageFile');
        const preview = document.getElementById('preview');
        const form = document.getElementById('bookForm');
        const bookList = document.getElementById('bookList');

        // Open/close modal
        btnOpen.addEventListener('click', () => modal.style.display = 'flex');
        btnClose.addEventListener('click', () => {
            modal.style.display = 'none';
            preview.src = '';
            preview.style.display = 'none';
            fileInput.value = '';
        });
        modal.addEventListener('click', e => { if(e.target === modal) btnClose.click(); });

        // Preview image
        fileInput.addEventListener('change', () => {
            const file = fileInput.files[0];
            if(file){
                const reader = new FileReader();
                reader.onload = e => {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                }
                reader.readAsDataURL(file);
            } else {
                preview.src = '';
                preview.style.display = 'none';
            }
        });

        // AJAX form submit
        form.addEventListener('submit', async e => {
            e.preventDefault();

            const formData = new FormData(form);
            const tokenInput = form.querySelector('input[name="__RequestVerificationToken"]');
            if(tokenInput) formData.append('__RequestVerificationToken', tokenInput.value);

            try {
                const response = await fetch(form.action, {
                    method: 'POST',
                    body: formData
                });

                if(response.ok){
                    const data = await response.json(); // server JSON qaytarmalıdır
                    // Yeni kitabı DOM-a əlavə et
                    const li = document.createElement('li');
                    li.innerHTML = `<strong>${data.Title}</strong><br>
                                    <em>Notes:</em> ${data.Notes} <br>
                                    <em>Thoughts:</em> ${data.Thoughts} <br>
                                    ${data.ImagePath ? `<img src="${data.ImagePath}" style="width:120px;">` : ''}`;
                    bookList.appendChild(li);

                    // Reset modal
                    btnClose.click();
                } else {
                    alert('Serverdə problem var!');
                }
            } catch(err) {
                console.error(err);
                alert('Server ilə əlaqə qurulmadı!');
            }
        });
    });
</script>
